
AllProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000504  00000578  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000504  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000058e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000946  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e9  00000000  00000000  00000f86  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b0  00000000  00000000  0000176f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00001b20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041d  00000000  00000000  00001ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000157  00000000  00000000  00001fbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002114  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e0       	ldi	r30, 0x04	; 4
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
  8e:	0c 94 80 02 	jmp	0x500	; 0x500 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <USART_init>:
}
unsigned char USART_receive(void){
	
	while(!(UCSR0A & (1<<RXC0)));
		return UDR0;
}
  96:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  9a:	83 e3       	ldi	r24, 0x33	; 51
  9c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  a0:	88 e1       	ldi	r24, 0x18	; 24
  a2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  a6:	86 e0       	ldi	r24, 0x06	; 6
  a8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  ac:	08 95       	ret

000000ae <USART_send>:
void USART_send( unsigned char data){	
	while(!(UCSR0A & (1<<UDRE0)));
  ae:	e0 ec       	ldi	r30, 0xC0	; 192
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	90 81       	ld	r25, Z
  b4:	95 ff       	sbrs	r25, 5
  b6:	fd cf       	rjmp	.-6      	; 0xb2 <USART_send+0x4>
	UDR0 = data;
  b8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  bc:	08 95       	ret

000000be <USART_putstring>:
}
void USART_putstring(char* StringPtr){	
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00){
  c4:	88 81       	ld	r24, Y
  c6:	88 23       	and	r24, r24
  c8:	31 f0       	breq	.+12     	; 0xd6 <USART_putstring+0x18>
  ca:	21 96       	adiw	r28, 0x01	; 1
		USART_send(*StringPtr);
  cc:	0e 94 57 00 	call	0xae	; 0xae <USART_send>
void USART_send( unsigned char data){	
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}
void USART_putstring(char* StringPtr){	
	while(*StringPtr != 0x00){
  d0:	89 91       	ld	r24, Y+
  d2:	81 11       	cpse	r24, r1
  d4:	fb cf       	rjmp	.-10     	; 0xcc <USART_putstring+0xe>
		USART_send(*StringPtr);
	StringPtr++;}
}
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	08 95       	ret

000000dc <main>:


int main(void)
{
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	00 d0       	rcall	.+0      	; 0xe2 <main+0x6>
  e2:	00 d0       	rcall	.+0      	; 0xe4 <main+0x8>
  e4:	cd b7       	in	r28, 0x3d	; 61
  e6:	de b7       	in	r29, 0x3e	; 62
	USART_init();
  e8:	0e 94 4b 00 	call	0x96	; 0x96 <USART_init>
	//unsigned int adc_value; 
 	DDRB=0xff; 
  ec:	8f ef       	ldi	r24, 0xFF	; 255
  ee:	84 b9       	out	0x04, r24	; 4
 	PORTB = 0x00;
  f0:	15 b8       	out	0x05, r1	; 5
 	DDRD|=(1<<PORTD0)|(1<<PORTD1);
  f2:	8a b1       	in	r24, 0x0a	; 10
  f4:	83 60       	ori	r24, 0x03	; 3
  f6:	8a b9       	out	0x0a, r24	; 10
	ADMUX |= (1<<REFS0)|(1<<MUX2)|(1<<MUX1)|(1<<MUX0); 
  f8:	ec e7       	ldi	r30, 0x7C	; 124
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	87 64       	ori	r24, 0x47	; 71
 100:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);
 102:	ea e7       	ldi	r30, 0x7A	; 122
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	87 68       	ori	r24, 0x87	; 135
 10a:	80 83       	st	Z, r24
	while (1)
	{
		char str[4];	
		ADCSRA |= (1<<ADSC);  
 10c:	0a e7       	ldi	r16, 0x7A	; 122
 10e:	10 e0       	ldi	r17, 0x00	; 0
		while (ADCSRA & (1<<ADSC)); 
		unsigned int adc_value = ADCW;
 110:	0f 2e       	mov	r0, r31
 112:	f8 e7       	ldi	r31, 0x78	; 120
 114:	af 2e       	mov	r10, r31
 116:	b1 2c       	mov	r11, r1
 118:	f0 2d       	mov	r31, r0
		//char string[]="adc_value: ";
		USART_putstring("Temperature is: ");  
		USART_putstring(str); 
		USART_putstring("*C");
		USART_putstring("\r");
		PORTB=0b00000100; 
 11a:	68 94       	set
 11c:	99 24       	eor	r9, r9
 11e:	92 f8       	bld	r9, 2
			PORTB=0x01;
		
		}
		else if ( temp>=24 && temp <30 )
		{
			PORTB = 0b00000010;
 120:	68 94       	set
 122:	77 24       	eor	r7, r7
 124:	71 f8       	bld	r7, 1
		USART_putstring("*C");
		USART_putstring("\r");
		PORTB=0b00000100; 
		if (temp < 26)
		{
			PORTB=0x01;
 126:	88 24       	eor	r8, r8
 128:	83 94       	inc	r8
	ADMUX |= (1<<REFS0)|(1<<MUX2)|(1<<MUX1)|(1<<MUX0); 
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);
	while (1)
	{
		char str[4];	
		ADCSRA |= (1<<ADSC);  
 12a:	f8 01       	movw	r30, r16
 12c:	80 81       	ld	r24, Z
 12e:	80 64       	ori	r24, 0x40	; 64
 130:	80 83       	st	Z, r24
		while (ADCSRA & (1<<ADSC)); 
 132:	f8 01       	movw	r30, r16
 134:	80 81       	ld	r24, Z
 136:	86 fd       	sbrc	r24, 6
 138:	fc cf       	rjmp	.-8      	; 0x132 <main+0x56>
		unsigned int adc_value = ADCW;
 13a:	f5 01       	movw	r30, r10
 13c:	60 81       	ld	r22, Z
 13e:	71 81       	ldd	r23, Z+1	; 0x01
		float temp= (adc_value*0.49701);
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 32 01 	call	0x264	; 0x264 <__floatunsisf>
 148:	28 e1       	ldi	r18, 0x18	; 24
 14a:	38 e7       	ldi	r19, 0x78	; 120
 14c:	4e ef       	ldi	r20, 0xFE	; 254
 14e:	5e e3       	ldi	r21, 0x3E	; 62
 150:	0e 94 c1 01 	call	0x382	; 0x382 <__mulsf3>
 154:	6b 01       	movw	r12, r22
 156:	7c 01       	movw	r14, r24
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__utoa_ncheck (unsigned int, char *, unsigned char);
	return __utoa_ncheck (__val, __s, __radix);
 158:	0e 94 03 01 	call	0x206	; 0x206 <__fixunssfsi>
 15c:	dc 01       	movw	r26, r24
 15e:	cb 01       	movw	r24, r22
 160:	4a e0       	ldi	r20, 0x0A	; 10
 162:	be 01       	movw	r22, r28
 164:	6f 5f       	subi	r22, 0xFF	; 255
 166:	7f 4f       	sbci	r23, 0xFF	; 255
 168:	0e 94 56 02 	call	0x4ac	; 0x4ac <__utoa_ncheck>
		utoa(temp,str,10);
		
		//char string[]="adc_value: ";
		USART_putstring("Temperature is: ");  
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_putstring>
		USART_putstring(str); 
 174:	ce 01       	movw	r24, r28
 176:	01 96       	adiw	r24, 0x01	; 1
 178:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_putstring>
		USART_putstring("*C");
 17c:	81 e1       	ldi	r24, 0x11	; 17
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_putstring>
		USART_putstring("\r");
 184:	84 e1       	ldi	r24, 0x14	; 20
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_putstring>
		PORTB=0b00000100; 
 18c:	95 b8       	out	0x05, r9	; 5
		if (temp < 26)
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	40 ed       	ldi	r20, 0xD0	; 208
 194:	51 e4       	ldi	r21, 0x41	; 65
 196:	c7 01       	movw	r24, r14
 198:	b6 01       	movw	r22, r12
 19a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__cmpsf2>
 19e:	88 23       	and	r24, r24
 1a0:	14 f4       	brge	.+4      	; 0x1a6 <main+0xca>
		{
			PORTB=0x01;
 1a2:	85 b8       	out	0x05, r8	; 5
 1a4:	21 c0       	rjmp	.+66     	; 0x1e8 <main+0x10c>
		
		}
		else if ( temp>=24 && temp <30 )
 1a6:	20 e0       	ldi	r18, 0x00	; 0
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	40 ec       	ldi	r20, 0xC0	; 192
 1ac:	51 e4       	ldi	r21, 0x41	; 65
 1ae:	c7 01       	movw	r24, r14
 1b0:	b6 01       	movw	r22, r12
 1b2:	0e 94 bc 01 	call	0x378	; 0x378 <__gesf2>
 1b6:	88 23       	and	r24, r24
 1b8:	64 f0       	brlt	.+24     	; 0x1d2 <main+0xf6>
 1ba:	20 e0       	ldi	r18, 0x00	; 0
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	40 ef       	ldi	r20, 0xF0	; 240
 1c0:	51 e4       	ldi	r21, 0x41	; 65
 1c2:	c7 01       	movw	r24, r14
 1c4:	b6 01       	movw	r22, r12
 1c6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__cmpsf2>
 1ca:	88 23       	and	r24, r24
 1cc:	14 f4       	brge	.+4      	; 0x1d2 <main+0xf6>
		{
			PORTB = 0b00000010;
 1ce:	75 b8       	out	0x05, r7	; 5
 1d0:	0b c0       	rjmp	.+22     	; 0x1e8 <main+0x10c>
		}
		else if ( temp >=30 )
 1d2:	20 e0       	ldi	r18, 0x00	; 0
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	40 ef       	ldi	r20, 0xF0	; 240
 1d8:	51 e4       	ldi	r21, 0x41	; 65
 1da:	c7 01       	movw	r24, r14
 1dc:	b6 01       	movw	r22, r12
 1de:	0e 94 bc 01 	call	0x378	; 0x378 <__gesf2>
 1e2:	88 23       	and	r24, r24
 1e4:	0c f0       	brlt	.+2      	; 0x1e8 <main+0x10c>
		{
			PORTB = 0b00000100;
 1e6:	95 b8       	out	0x05, r9	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e8:	ff ef       	ldi	r31, 0xFF	; 255
 1ea:	21 ee       	ldi	r18, 0xE1	; 225
 1ec:	84 e0       	ldi	r24, 0x04	; 4
 1ee:	f1 50       	subi	r31, 0x01	; 1
 1f0:	20 40       	sbci	r18, 0x00	; 0
 1f2:	80 40       	sbci	r24, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <main+0x112>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0x11c>
 1f8:	00 00       	nop
		}
		
		_delay_ms(100);
	}
 1fa:	97 cf       	rjmp	.-210    	; 0x12a <main+0x4e>

000001fc <__cmpsf2>:
 1fc:	0e 94 6f 01 	call	0x2de	; 0x2de <__fp_cmp>
 200:	08 f4       	brcc	.+2      	; 0x204 <__cmpsf2+0x8>
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	08 95       	ret

00000206 <__fixunssfsi>:
 206:	0e 94 9b 01 	call	0x336	; 0x336 <__fp_splitA>
 20a:	88 f0       	brcs	.+34     	; 0x22e <__fixunssfsi+0x28>
 20c:	9f 57       	subi	r25, 0x7F	; 127
 20e:	98 f0       	brcs	.+38     	; 0x236 <__fixunssfsi+0x30>
 210:	b9 2f       	mov	r27, r25
 212:	99 27       	eor	r25, r25
 214:	b7 51       	subi	r27, 0x17	; 23
 216:	b0 f0       	brcs	.+44     	; 0x244 <__fixunssfsi+0x3e>
 218:	e1 f0       	breq	.+56     	; 0x252 <__fixunssfsi+0x4c>
 21a:	66 0f       	add	r22, r22
 21c:	77 1f       	adc	r23, r23
 21e:	88 1f       	adc	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	1a f0       	brmi	.+6      	; 0x22a <__fixunssfsi+0x24>
 224:	ba 95       	dec	r27
 226:	c9 f7       	brne	.-14     	; 0x21a <__fixunssfsi+0x14>
 228:	14 c0       	rjmp	.+40     	; 0x252 <__fixunssfsi+0x4c>
 22a:	b1 30       	cpi	r27, 0x01	; 1
 22c:	91 f0       	breq	.+36     	; 0x252 <__fixunssfsi+0x4c>
 22e:	0e 94 b5 01 	call	0x36a	; 0x36a <__fp_zero>
 232:	b1 e0       	ldi	r27, 0x01	; 1
 234:	08 95       	ret
 236:	0c 94 b5 01 	jmp	0x36a	; 0x36a <__fp_zero>
 23a:	67 2f       	mov	r22, r23
 23c:	78 2f       	mov	r23, r24
 23e:	88 27       	eor	r24, r24
 240:	b8 5f       	subi	r27, 0xF8	; 248
 242:	39 f0       	breq	.+14     	; 0x252 <__fixunssfsi+0x4c>
 244:	b9 3f       	cpi	r27, 0xF9	; 249
 246:	cc f3       	brlt	.-14     	; 0x23a <__fixunssfsi+0x34>
 248:	86 95       	lsr	r24
 24a:	77 95       	ror	r23
 24c:	67 95       	ror	r22
 24e:	b3 95       	inc	r27
 250:	d9 f7       	brne	.-10     	; 0x248 <__fixunssfsi+0x42>
 252:	3e f4       	brtc	.+14     	; 0x262 <__fixunssfsi+0x5c>
 254:	90 95       	com	r25
 256:	80 95       	com	r24
 258:	70 95       	com	r23
 25a:	61 95       	neg	r22
 25c:	7f 4f       	sbci	r23, 0xFF	; 255
 25e:	8f 4f       	sbci	r24, 0xFF	; 255
 260:	9f 4f       	sbci	r25, 0xFF	; 255
 262:	08 95       	ret

00000264 <__floatunsisf>:
 264:	e8 94       	clt
 266:	09 c0       	rjmp	.+18     	; 0x27a <__floatsisf+0x12>

00000268 <__floatsisf>:
 268:	97 fb       	bst	r25, 7
 26a:	3e f4       	brtc	.+14     	; 0x27a <__floatsisf+0x12>
 26c:	90 95       	com	r25
 26e:	80 95       	com	r24
 270:	70 95       	com	r23
 272:	61 95       	neg	r22
 274:	7f 4f       	sbci	r23, 0xFF	; 255
 276:	8f 4f       	sbci	r24, 0xFF	; 255
 278:	9f 4f       	sbci	r25, 0xFF	; 255
 27a:	99 23       	and	r25, r25
 27c:	a9 f0       	breq	.+42     	; 0x2a8 <__floatsisf+0x40>
 27e:	f9 2f       	mov	r31, r25
 280:	96 e9       	ldi	r25, 0x96	; 150
 282:	bb 27       	eor	r27, r27
 284:	93 95       	inc	r25
 286:	f6 95       	lsr	r31
 288:	87 95       	ror	r24
 28a:	77 95       	ror	r23
 28c:	67 95       	ror	r22
 28e:	b7 95       	ror	r27
 290:	f1 11       	cpse	r31, r1
 292:	f8 cf       	rjmp	.-16     	; 0x284 <__floatsisf+0x1c>
 294:	fa f4       	brpl	.+62     	; 0x2d4 <__floatsisf+0x6c>
 296:	bb 0f       	add	r27, r27
 298:	11 f4       	brne	.+4      	; 0x29e <__floatsisf+0x36>
 29a:	60 ff       	sbrs	r22, 0
 29c:	1b c0       	rjmp	.+54     	; 0x2d4 <__floatsisf+0x6c>
 29e:	6f 5f       	subi	r22, 0xFF	; 255
 2a0:	7f 4f       	sbci	r23, 0xFF	; 255
 2a2:	8f 4f       	sbci	r24, 0xFF	; 255
 2a4:	9f 4f       	sbci	r25, 0xFF	; 255
 2a6:	16 c0       	rjmp	.+44     	; 0x2d4 <__floatsisf+0x6c>
 2a8:	88 23       	and	r24, r24
 2aa:	11 f0       	breq	.+4      	; 0x2b0 <__floatsisf+0x48>
 2ac:	96 e9       	ldi	r25, 0x96	; 150
 2ae:	11 c0       	rjmp	.+34     	; 0x2d2 <__floatsisf+0x6a>
 2b0:	77 23       	and	r23, r23
 2b2:	21 f0       	breq	.+8      	; 0x2bc <__floatsisf+0x54>
 2b4:	9e e8       	ldi	r25, 0x8E	; 142
 2b6:	87 2f       	mov	r24, r23
 2b8:	76 2f       	mov	r23, r22
 2ba:	05 c0       	rjmp	.+10     	; 0x2c6 <__floatsisf+0x5e>
 2bc:	66 23       	and	r22, r22
 2be:	71 f0       	breq	.+28     	; 0x2dc <__floatsisf+0x74>
 2c0:	96 e8       	ldi	r25, 0x86	; 134
 2c2:	86 2f       	mov	r24, r22
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	60 e0       	ldi	r22, 0x00	; 0
 2c8:	2a f0       	brmi	.+10     	; 0x2d4 <__floatsisf+0x6c>
 2ca:	9a 95       	dec	r25
 2cc:	66 0f       	add	r22, r22
 2ce:	77 1f       	adc	r23, r23
 2d0:	88 1f       	adc	r24, r24
 2d2:	da f7       	brpl	.-10     	; 0x2ca <__floatsisf+0x62>
 2d4:	88 0f       	add	r24, r24
 2d6:	96 95       	lsr	r25
 2d8:	87 95       	ror	r24
 2da:	97 f9       	bld	r25, 7
 2dc:	08 95       	ret

000002de <__fp_cmp>:
 2de:	99 0f       	add	r25, r25
 2e0:	00 08       	sbc	r0, r0
 2e2:	55 0f       	add	r21, r21
 2e4:	aa 0b       	sbc	r26, r26
 2e6:	e0 e8       	ldi	r30, 0x80	; 128
 2e8:	fe ef       	ldi	r31, 0xFE	; 254
 2ea:	16 16       	cp	r1, r22
 2ec:	17 06       	cpc	r1, r23
 2ee:	e8 07       	cpc	r30, r24
 2f0:	f9 07       	cpc	r31, r25
 2f2:	c0 f0       	brcs	.+48     	; 0x324 <__fp_cmp+0x46>
 2f4:	12 16       	cp	r1, r18
 2f6:	13 06       	cpc	r1, r19
 2f8:	e4 07       	cpc	r30, r20
 2fa:	f5 07       	cpc	r31, r21
 2fc:	98 f0       	brcs	.+38     	; 0x324 <__fp_cmp+0x46>
 2fe:	62 1b       	sub	r22, r18
 300:	73 0b       	sbc	r23, r19
 302:	84 0b       	sbc	r24, r20
 304:	95 0b       	sbc	r25, r21
 306:	39 f4       	brne	.+14     	; 0x316 <__fp_cmp+0x38>
 308:	0a 26       	eor	r0, r26
 30a:	61 f0       	breq	.+24     	; 0x324 <__fp_cmp+0x46>
 30c:	23 2b       	or	r18, r19
 30e:	24 2b       	or	r18, r20
 310:	25 2b       	or	r18, r21
 312:	21 f4       	brne	.+8      	; 0x31c <__fp_cmp+0x3e>
 314:	08 95       	ret
 316:	0a 26       	eor	r0, r26
 318:	09 f4       	brne	.+2      	; 0x31c <__fp_cmp+0x3e>
 31a:	a1 40       	sbci	r26, 0x01	; 1
 31c:	a6 95       	lsr	r26
 31e:	8f ef       	ldi	r24, 0xFF	; 255
 320:	81 1d       	adc	r24, r1
 322:	81 1d       	adc	r24, r1
 324:	08 95       	ret

00000326 <__fp_split3>:
 326:	57 fd       	sbrc	r21, 7
 328:	90 58       	subi	r25, 0x80	; 128
 32a:	44 0f       	add	r20, r20
 32c:	55 1f       	adc	r21, r21
 32e:	59 f0       	breq	.+22     	; 0x346 <__fp_splitA+0x10>
 330:	5f 3f       	cpi	r21, 0xFF	; 255
 332:	71 f0       	breq	.+28     	; 0x350 <__fp_splitA+0x1a>
 334:	47 95       	ror	r20

00000336 <__fp_splitA>:
 336:	88 0f       	add	r24, r24
 338:	97 fb       	bst	r25, 7
 33a:	99 1f       	adc	r25, r25
 33c:	61 f0       	breq	.+24     	; 0x356 <__fp_splitA+0x20>
 33e:	9f 3f       	cpi	r25, 0xFF	; 255
 340:	79 f0       	breq	.+30     	; 0x360 <__fp_splitA+0x2a>
 342:	87 95       	ror	r24
 344:	08 95       	ret
 346:	12 16       	cp	r1, r18
 348:	13 06       	cpc	r1, r19
 34a:	14 06       	cpc	r1, r20
 34c:	55 1f       	adc	r21, r21
 34e:	f2 cf       	rjmp	.-28     	; 0x334 <__fp_split3+0xe>
 350:	46 95       	lsr	r20
 352:	f1 df       	rcall	.-30     	; 0x336 <__fp_splitA>
 354:	08 c0       	rjmp	.+16     	; 0x366 <__fp_splitA+0x30>
 356:	16 16       	cp	r1, r22
 358:	17 06       	cpc	r1, r23
 35a:	18 06       	cpc	r1, r24
 35c:	99 1f       	adc	r25, r25
 35e:	f1 cf       	rjmp	.-30     	; 0x342 <__fp_splitA+0xc>
 360:	86 95       	lsr	r24
 362:	71 05       	cpc	r23, r1
 364:	61 05       	cpc	r22, r1
 366:	08 94       	sec
 368:	08 95       	ret

0000036a <__fp_zero>:
 36a:	e8 94       	clt

0000036c <__fp_szero>:
 36c:	bb 27       	eor	r27, r27
 36e:	66 27       	eor	r22, r22
 370:	77 27       	eor	r23, r23
 372:	cb 01       	movw	r24, r22
 374:	97 f9       	bld	r25, 7
 376:	08 95       	ret

00000378 <__gesf2>:
 378:	0e 94 6f 01 	call	0x2de	; 0x2de <__fp_cmp>
 37c:	08 f4       	brcc	.+2      	; 0x380 <__gesf2+0x8>
 37e:	8f ef       	ldi	r24, 0xFF	; 255
 380:	08 95       	ret

00000382 <__mulsf3>:
 382:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__mulsf3x>
 386:	0c 94 45 02 	jmp	0x48a	; 0x48a <__fp_round>
 38a:	0e 94 37 02 	call	0x46e	; 0x46e <__fp_pscA>
 38e:	38 f0       	brcs	.+14     	; 0x39e <__mulsf3+0x1c>
 390:	0e 94 3e 02 	call	0x47c	; 0x47c <__fp_pscB>
 394:	20 f0       	brcs	.+8      	; 0x39e <__mulsf3+0x1c>
 396:	95 23       	and	r25, r21
 398:	11 f0       	breq	.+4      	; 0x39e <__mulsf3+0x1c>
 39a:	0c 94 2e 02 	jmp	0x45c	; 0x45c <__fp_inf>
 39e:	0c 94 34 02 	jmp	0x468	; 0x468 <__fp_nan>
 3a2:	11 24       	eor	r1, r1
 3a4:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_szero>

000003a8 <__mulsf3x>:
 3a8:	0e 94 93 01 	call	0x326	; 0x326 <__fp_split3>
 3ac:	70 f3       	brcs	.-36     	; 0x38a <__mulsf3+0x8>

000003ae <__mulsf3_pse>:
 3ae:	95 9f       	mul	r25, r21
 3b0:	c1 f3       	breq	.-16     	; 0x3a2 <__mulsf3+0x20>
 3b2:	95 0f       	add	r25, r21
 3b4:	50 e0       	ldi	r21, 0x00	; 0
 3b6:	55 1f       	adc	r21, r21
 3b8:	62 9f       	mul	r22, r18
 3ba:	f0 01       	movw	r30, r0
 3bc:	72 9f       	mul	r23, r18
 3be:	bb 27       	eor	r27, r27
 3c0:	f0 0d       	add	r31, r0
 3c2:	b1 1d       	adc	r27, r1
 3c4:	63 9f       	mul	r22, r19
 3c6:	aa 27       	eor	r26, r26
 3c8:	f0 0d       	add	r31, r0
 3ca:	b1 1d       	adc	r27, r1
 3cc:	aa 1f       	adc	r26, r26
 3ce:	64 9f       	mul	r22, r20
 3d0:	66 27       	eor	r22, r22
 3d2:	b0 0d       	add	r27, r0
 3d4:	a1 1d       	adc	r26, r1
 3d6:	66 1f       	adc	r22, r22
 3d8:	82 9f       	mul	r24, r18
 3da:	22 27       	eor	r18, r18
 3dc:	b0 0d       	add	r27, r0
 3de:	a1 1d       	adc	r26, r1
 3e0:	62 1f       	adc	r22, r18
 3e2:	73 9f       	mul	r23, r19
 3e4:	b0 0d       	add	r27, r0
 3e6:	a1 1d       	adc	r26, r1
 3e8:	62 1f       	adc	r22, r18
 3ea:	83 9f       	mul	r24, r19
 3ec:	a0 0d       	add	r26, r0
 3ee:	61 1d       	adc	r22, r1
 3f0:	22 1f       	adc	r18, r18
 3f2:	74 9f       	mul	r23, r20
 3f4:	33 27       	eor	r19, r19
 3f6:	a0 0d       	add	r26, r0
 3f8:	61 1d       	adc	r22, r1
 3fa:	23 1f       	adc	r18, r19
 3fc:	84 9f       	mul	r24, r20
 3fe:	60 0d       	add	r22, r0
 400:	21 1d       	adc	r18, r1
 402:	82 2f       	mov	r24, r18
 404:	76 2f       	mov	r23, r22
 406:	6a 2f       	mov	r22, r26
 408:	11 24       	eor	r1, r1
 40a:	9f 57       	subi	r25, 0x7F	; 127
 40c:	50 40       	sbci	r21, 0x00	; 0
 40e:	9a f0       	brmi	.+38     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 410:	f1 f0       	breq	.+60     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 412:	88 23       	and	r24, r24
 414:	4a f0       	brmi	.+18     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 416:	ee 0f       	add	r30, r30
 418:	ff 1f       	adc	r31, r31
 41a:	bb 1f       	adc	r27, r27
 41c:	66 1f       	adc	r22, r22
 41e:	77 1f       	adc	r23, r23
 420:	88 1f       	adc	r24, r24
 422:	91 50       	subi	r25, 0x01	; 1
 424:	50 40       	sbci	r21, 0x00	; 0
 426:	a9 f7       	brne	.-22     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 428:	9e 3f       	cpi	r25, 0xFE	; 254
 42a:	51 05       	cpc	r21, r1
 42c:	80 f0       	brcs	.+32     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 42e:	0c 94 2e 02 	jmp	0x45c	; 0x45c <__fp_inf>
 432:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_szero>
 436:	5f 3f       	cpi	r21, 0xFF	; 255
 438:	e4 f3       	brlt	.-8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 43a:	98 3e       	cpi	r25, 0xE8	; 232
 43c:	d4 f3       	brlt	.-12     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 43e:	86 95       	lsr	r24
 440:	77 95       	ror	r23
 442:	67 95       	ror	r22
 444:	b7 95       	ror	r27
 446:	f7 95       	ror	r31
 448:	e7 95       	ror	r30
 44a:	9f 5f       	subi	r25, 0xFF	; 255
 44c:	c1 f7       	brne	.-16     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 44e:	fe 2b       	or	r31, r30
 450:	88 0f       	add	r24, r24
 452:	91 1d       	adc	r25, r1
 454:	96 95       	lsr	r25
 456:	87 95       	ror	r24
 458:	97 f9       	bld	r25, 7
 45a:	08 95       	ret

0000045c <__fp_inf>:
 45c:	97 f9       	bld	r25, 7
 45e:	9f 67       	ori	r25, 0x7F	; 127
 460:	80 e8       	ldi	r24, 0x80	; 128
 462:	70 e0       	ldi	r23, 0x00	; 0
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	08 95       	ret

00000468 <__fp_nan>:
 468:	9f ef       	ldi	r25, 0xFF	; 255
 46a:	80 ec       	ldi	r24, 0xC0	; 192
 46c:	08 95       	ret

0000046e <__fp_pscA>:
 46e:	00 24       	eor	r0, r0
 470:	0a 94       	dec	r0
 472:	16 16       	cp	r1, r22
 474:	17 06       	cpc	r1, r23
 476:	18 06       	cpc	r1, r24
 478:	09 06       	cpc	r0, r25
 47a:	08 95       	ret

0000047c <__fp_pscB>:
 47c:	00 24       	eor	r0, r0
 47e:	0a 94       	dec	r0
 480:	12 16       	cp	r1, r18
 482:	13 06       	cpc	r1, r19
 484:	14 06       	cpc	r1, r20
 486:	05 06       	cpc	r0, r21
 488:	08 95       	ret

0000048a <__fp_round>:
 48a:	09 2e       	mov	r0, r25
 48c:	03 94       	inc	r0
 48e:	00 0c       	add	r0, r0
 490:	11 f4       	brne	.+4      	; 0x496 <__fp_round+0xc>
 492:	88 23       	and	r24, r24
 494:	52 f0       	brmi	.+20     	; 0x4aa <__fp_round+0x20>
 496:	bb 0f       	add	r27, r27
 498:	40 f4       	brcc	.+16     	; 0x4aa <__fp_round+0x20>
 49a:	bf 2b       	or	r27, r31
 49c:	11 f4       	brne	.+4      	; 0x4a2 <__fp_round+0x18>
 49e:	60 ff       	sbrs	r22, 0
 4a0:	04 c0       	rjmp	.+8      	; 0x4aa <__fp_round+0x20>
 4a2:	6f 5f       	subi	r22, 0xFF	; 255
 4a4:	7f 4f       	sbci	r23, 0xFF	; 255
 4a6:	8f 4f       	sbci	r24, 0xFF	; 255
 4a8:	9f 4f       	sbci	r25, 0xFF	; 255
 4aa:	08 95       	ret

000004ac <__utoa_ncheck>:
 4ac:	bb 27       	eor	r27, r27

000004ae <__utoa_common>:
 4ae:	fb 01       	movw	r30, r22
 4b0:	55 27       	eor	r21, r21
 4b2:	aa 27       	eor	r26, r26
 4b4:	88 0f       	add	r24, r24
 4b6:	99 1f       	adc	r25, r25
 4b8:	aa 1f       	adc	r26, r26
 4ba:	a4 17       	cp	r26, r20
 4bc:	10 f0       	brcs	.+4      	; 0x4c2 <__utoa_common+0x14>
 4be:	a4 1b       	sub	r26, r20
 4c0:	83 95       	inc	r24
 4c2:	50 51       	subi	r21, 0x10	; 16
 4c4:	b9 f7       	brne	.-18     	; 0x4b4 <__utoa_common+0x6>
 4c6:	a0 5d       	subi	r26, 0xD0	; 208
 4c8:	aa 33       	cpi	r26, 0x3A	; 58
 4ca:	08 f0       	brcs	.+2      	; 0x4ce <__utoa_common+0x20>
 4cc:	a9 5d       	subi	r26, 0xD9	; 217
 4ce:	a1 93       	st	Z+, r26
 4d0:	00 97       	sbiw	r24, 0x00	; 0
 4d2:	79 f7       	brne	.-34     	; 0x4b2 <__utoa_common+0x4>
 4d4:	b1 11       	cpse	r27, r1
 4d6:	b1 93       	st	Z+, r27
 4d8:	11 92       	st	Z+, r1
 4da:	cb 01       	movw	r24, r22
 4dc:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <strrev>

000004e0 <strrev>:
 4e0:	dc 01       	movw	r26, r24
 4e2:	fc 01       	movw	r30, r24
 4e4:	67 2f       	mov	r22, r23
 4e6:	71 91       	ld	r23, Z+
 4e8:	77 23       	and	r23, r23
 4ea:	e1 f7       	brne	.-8      	; 0x4e4 <strrev+0x4>
 4ec:	32 97       	sbiw	r30, 0x02	; 2
 4ee:	04 c0       	rjmp	.+8      	; 0x4f8 <strrev+0x18>
 4f0:	7c 91       	ld	r23, X
 4f2:	6d 93       	st	X+, r22
 4f4:	70 83       	st	Z, r23
 4f6:	62 91       	ld	r22, -Z
 4f8:	ae 17       	cp	r26, r30
 4fa:	bf 07       	cpc	r27, r31
 4fc:	c8 f3       	brcs	.-14     	; 0x4f0 <strrev+0x10>
 4fe:	08 95       	ret

00000500 <_exit>:
 500:	f8 94       	cli

00000502 <__stop_program>:
 502:	ff cf       	rjmp	.-2      	; 0x502 <__stop_program>
